# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'UnTangledUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import os
from GraphClass import *

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1041, 625)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.Datatable = QtWidgets.QTabWidget(self.centralwidget)
        self.Datatable.setGeometry(QtCore.QRect(-4, -21, 1051, 631))
        self.Datatable.setObjectName("Datatable")
        self.MainTab = QtWidgets.QWidget()
        self.MainTab.setObjectName("MainTab")
        self.FileButton = QtWidgets.QPushButton(self.MainTab)
        self.FileButton.setGeometry(QtCore.QRect(630, 210, 91, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        self.FileButton.setFont(font)
        self.FileButton.setObjectName("FileButton")
        self.Inputlabel = QtWidgets.QLabel(self.MainTab)
        self.Inputlabel.setGeometry(QtCore.QRect(36, 150, 591, 41))
        self.Inputlabel.setObjectName("Inputlabel")
        self.InputBox = QtWidgets.QLineEdit(self.MainTab)
        self.InputBox.setGeometry(QtCore.QRect(300, 210, 321, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.InputBox.setFont(font)
        self.InputBox.setObjectName("InputBox")
        self.MainLabel = QtWidgets.QLabel(self.MainTab)
        self.MainLabel.setGeometry(QtCore.QRect(300, 0, 461, 131))
        self.MainLabel.setObjectName("MainLabel")
        self.fileinputlabel = QtWidgets.QLabel(self.MainTab)
        self.fileinputlabel.setGeometry(QtCore.QRect(40, 262, 451, 31))
        self.fileinputlabel.setObjectName("fileinputlabel")
        self.FileDatabox = QtWidgets.QTextBrowser(self.MainTab)
        self.FileDatabox.setGeometry(QtCore.QRect(40, 320, 841, 261))
        self.FileDatabox.setObjectName("FileDatabox")
        self.GraphItbutton = QtWidgets.QPushButton(self.MainTab)
        self.GraphItbutton.setGeometry(QtCore.QRect(900, 360, 111, 71))
        self.GraphItbutton.setMouseTracking(False)
        self.GraphItbutton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.GraphItbutton.setIcon(icon)
        self.GraphItbutton.setIconSize(QtCore.QSize(111, 71))
        self.GraphItbutton.setObjectName("GraphItbutton")
        self.Graphitlabel = QtWidgets.QLabel(self.MainTab)
        self.Graphitlabel.setGeometry(QtCore.QRect(900, 440, 121, 31))
        self.Graphitlabel.setObjectName("Graphitlabel")
        self.labelcheckbox = QtWidgets.QCheckBox(self.MainTab)
        self.labelcheckbox.setGeometry(QtCore.QRect(900, 480, 121, 21))
        self.labelcheckbox.setObjectName("labelcheckbox")
        self.Datatable.addTab(self.MainTab, "")
        self.VisualINTab = QtWidgets.QWidget()
        self.VisualINTab.setObjectName("VisualINTab")
        self.InputGraph = QtWidgets.QLabel(self.VisualINTab)
        self.InputGraph.setGeometry(QtCore.QRect(30, 10, 981, 441))
        self.InputGraph.setScaledContents(True)
        self.InputGraph.setObjectName("InputGraph")
        self.Algochoicebox = QtWidgets.QComboBox(self.VisualINTab)
        self.Algochoicebox.setGeometry(QtCore.QRect(220, 520, 261, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.Algochoicebox.setFont(font)
        self.Algochoicebox.setObjectName("Algochoicebox")
        self.Algochoicebox.addItem("")
        self.Algochoicebox.addItem("")
        self.Algochoicebox.addItem("")
        self.Algochoicebox.addItem("")
        self.Algochoicebox.addItem("")
        self.Algochoicebox.addItem("")
        self.Algochoicebox.addItem("")
        self.algolabel = QtWidgets.QLabel(self.VisualINTab)
        self.algolabel.setGeometry(QtCore.QRect(250, 460, 531, 41))
        self.algolabel.setObjectName("algolabel")
        self.runalgobutton = QtWidgets.QPushButton(self.VisualINTab)
        self.runalgobutton.setGeometry(QtCore.QRect(620, 510, 181, 71))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.runalgobutton.setFont(font)
        self.runalgobutton.setObjectName("runalgobutton")
        self.Datatable.addTab(self.VisualINTab, "")
        self.VisualOUTTab = QtWidgets.QWidget()
        self.VisualOUTTab.setObjectName("VisualOUTTab")
        self.OutputGraph = QtWidgets.QLabel(self.VisualOUTTab)
        self.OutputGraph.setGeometry(QtCore.QRect(20, 100, 991, 481))
        self.OutputGraph.setScaledContents(True)
        self.OutputGraph.setObjectName("OutputGraph")
        self.Outputgraphlabel = QtWidgets.QLabel(self.VisualOUTTab)
        self.Outputgraphlabel.setGeometry(QtCore.QRect(20, 30, 791, 51))
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(25)
        font.setBold(True)
        font.setWeight(75)
        self.Outputgraphlabel.setFont(font)
        self.Outputgraphlabel.setObjectName("Outputgraphlabel")
        self.Datatable.addTab(self.VisualOUTTab, "")
        self.DataTab = QtWidgets.QWidget()
        self.DataTab.setObjectName("DataTab")
        self.tableView = QtWidgets.QTableView(self.DataTab)
        self.tableView.setGeometry(QtCore.QRect(20, 20, 1001, 561))
        self.tableView.setObjectName("tableView")
        self.Datatable.addTab(self.DataTab, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1041, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.FileButton.setText(_translate("MainWindow", "Browse"))
        self.Inputlabel.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:18pt;\">Please choose the file to use for input:</span></p></body></html>"))
        self.MainLabel.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:36pt;\">UnTangled</span></p><p align=\"center\"><span style=\" font-size:16pt;\">A graph and tree visualizer <br/>to process different algorithms</span></p></body></html>"))
        self.fileinputlabel.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:18pt;\">Following is the input provided in the file:</span></p></body></html>"))
        self.Graphitlabel.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:16pt;\">Graph It!</span></p></body></html>"))
        self.labelcheckbox.setText(_translate("MainWindow", "Add Weights as Label"))
        self.Datatable.setTabText(self.Datatable.indexOf(self.MainTab), _translate("MainWindow", "Tab 1"))
        self.InputGraph.setText(_translate("MainWindow", "TextLabel"))
        self.Algochoicebox.setItemText(0, _translate("MainWindow", "Prims Algorithm"))
        self.Algochoicebox.setItemText(1, _translate("MainWindow", "Kruskal Algorithm"))
        self.Algochoicebox.setItemText(2, _translate("MainWindow", "Dijkstra Algorithm"))
        self.Algochoicebox.setItemText(3, _translate("MainWindow", "Bellman Ford Algorithm"))
        self.Algochoicebox.setItemText(4, _translate("MainWindow", "Floyd Warshall Algorithm"))
        self.Algochoicebox.setItemText(5, _translate("MainWindow", "Bor≈Øvka\'s Algorithm"))
        self.Algochoicebox.setItemText(6, _translate("MainWindow", "Clustering Coefficient in Graph Theory"))
        self.algolabel.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:18pt;\">Please choose an algorithm to run on this graph:</span></p></body></html>"))
        self.runalgobutton.setText(_translate("MainWindow", "Run It"))
        self.Datatable.setTabText(self.Datatable.indexOf(self.VisualINTab), _translate("MainWindow", "Tab 2"))
        self.OutputGraph.setText(_translate("MainWindow", "TextLabel"))
        self.Outputgraphlabel.setText(_translate("MainWindow", "Result Generated by: "))
        self.Datatable.setTabText(self.Datatable.indexOf(self.VisualOUTTab), _translate("MainWindow", "Page"))
        self.Datatable.setTabText(self.Datatable.indexOf(self.DataTab), _translate("MainWindow", "Page"))

    def getfile(self):
        fname = QtWidgets.QFileDialog.getOpenFileName(None, "Select File", os.getcwd(), "Text files (*.txt)")
        self.InputBox.setText(fname[0])
        inputfile = open(fname[0], "r")
        self.FileDatabox.setText(inputfile.read())

    def graphit(self,path,graph):
        graph.ReadFile(path)
        graph.generategraph()
        if(self.labelcheckbox.isChecked()==True):
            graph.savegraph(1)
        else:
            graph.savegraph(0)
        self.Datatable.setCurrentIndex(1)
        self.InputGraph.setPixmap(QtGui.QPixmap("graph.png"))

    def test(self,graph):
        """ edges = graph.kruskal_algo()
        MST = nx.Graph()
        for i in range(graph.nodecount):
            MST.add_node(int(graph.nodeandpos[i][0]), pos=(float(graph.nodeandpos[i][1]), float(graph.nodeandpos[i][2])))

        for i in range(len(edges)):
            MST.add_edge(edges[i][0],edges[i][1], weight=float(edges[i][2])/10000000)
            
        plt.clf()
        pos=nx.get_node_attributes(MST,'pos')
        nx.draw_networkx(MST,pos)
        plt.savefig('MST.png', bbox_inches='tight')
        self.Datatable.setCurrentIndex(2)
        self.Outputgraphlabel.setText(self.Outputgraphlabel.text() + self.Algochoicebox.currentText())
        self.OutputGraph.setPixmap(QtGui.QPixmap("MST.png")) """
        parent, matrix = graph.primMST()
        MST = nx.Graph()
        for i in range(graph.nodecount):
            MST.add_node(int(graph.nodeandpos[i][0]), pos=(float(graph.nodeandpos[i][1]), float(graph.nodeandpos[i][2])))
        for i in range(1,graph.nodecount):
            MST.add_edge(parent[i],i, weight=float(matrix[i][parent[i]])/10000000)
        plt.clf()
        pos=nx.get_node_attributes(MST,'pos')
        nx.draw_networkx(MST,pos)
        plt.savefig('MST.png', bbox_inches='tight')
        self.Datatable.setCurrentIndex(2)
        self.Outputgraphlabel.setText(self.Outputgraphlabel.text() + self.Algochoicebox.currentText())
        self.OutputGraph.setPixmap(QtGui.QPixmap("MST.png"))
